// Code generated by protoc-gen-go. DO NOT EDIT.
// source: measurement.proto

package measurement

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Measurement struct {
	Weight               float32  `protobuf:"fixed32,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Humidity             float32  `protobuf:"fixed32,2,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Color                float32  `protobuf:"fixed32,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f502a743c760a3e, []int{0}
}

func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (m *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(m, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

func (m *Measurement) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Measurement) GetHumidity() float32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

func (m *Measurement) GetColor() float32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type OK struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OK) Reset()         { *m = OK{} }
func (m *OK) String() string { return proto.CompactTextString(m) }
func (*OK) ProtoMessage()    {}
func (*OK) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f502a743c760a3e, []int{1}
}

func (m *OK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OK.Unmarshal(m, b)
}
func (m *OK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OK.Marshal(b, m, deterministic)
}
func (m *OK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OK.Merge(m, src)
}
func (m *OK) XXX_Size() int {
	return xxx_messageInfo_OK.Size(m)
}
func (m *OK) XXX_DiscardUnknown() {
	xxx_messageInfo_OK.DiscardUnknown(m)
}

var xxx_messageInfo_OK proto.InternalMessageInfo

func (m *OK) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Measurement)(nil), "Measurement")
	proto.RegisterType((*OK)(nil), "OK")
}

func init() {
	proto.RegisterFile("measurement.proto", fileDescriptor_5f502a743c760a3e)
}

var fileDescriptor_5f502a743c760a3e = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4d, 0x4d, 0x2c,
	0x2e, 0x2d, 0x4a, 0xcd, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe7,
	0xe2, 0xf6, 0x45, 0x08, 0x0a, 0x89, 0x71, 0xb1, 0x95, 0xa7, 0x66, 0xa6, 0x67, 0x94, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0x30, 0x05, 0x41, 0x79, 0x42, 0x52, 0x5c, 0x1c, 0x19, 0xa5, 0xb9, 0x99, 0x29,
	0x99, 0x25, 0x95, 0x12, 0x4c, 0x60, 0x19, 0x38, 0x5f, 0x48, 0x84, 0x8b, 0x35, 0x39, 0x3f, 0x27,
	0xbf, 0x48, 0x82, 0x19, 0x2c, 0x01, 0xe1, 0x28, 0xc9, 0x71, 0x31, 0xf9, 0x7b, 0x0b, 0x49, 0x70,
	0xb1, 0x17, 0x97, 0x26, 0x27, 0xa7, 0x16, 0x17, 0x83, 0x0d, 0xe4, 0x08, 0x82, 0x71, 0x8d, 0xac,
	0xb9, 0x84, 0x90, 0x2c, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x52, 0xe5, 0xe2, 0xf3,
	0x4b, 0x2d, 0x47, 0x76, 0x11, 0x8f, 0x1e, 0x12, 0x4f, 0x8a, 0x59, 0xcf, 0xdf, 0x5b, 0x89, 0x21,
	0x89, 0x0d, 0xec, 0x78, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xe1, 0x44, 0x90, 0xd1,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MeasurementServiceClient is the client API for MeasurementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeasurementServiceClient interface {
	NewMeasurement(ctx context.Context, in *Measurement, opts ...grpc.CallOption) (*OK, error)
}

type measurementServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMeasurementServiceClient(cc grpc.ClientConnInterface) MeasurementServiceClient {
	return &measurementServiceClient{cc}
}

func (c *measurementServiceClient) NewMeasurement(ctx context.Context, in *Measurement, opts ...grpc.CallOption) (*OK, error) {
	out := new(OK)
	err := c.cc.Invoke(ctx, "/MeasurementService/NewMeasurement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeasurementServiceServer is the server API for MeasurementService service.
type MeasurementServiceServer interface {
	NewMeasurement(context.Context, *Measurement) (*OK, error)
}

// UnimplementedMeasurementServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeasurementServiceServer struct {
}

func (*UnimplementedMeasurementServiceServer) NewMeasurement(ctx context.Context, req *Measurement) (*OK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewMeasurement not implemented")
}

func RegisterMeasurementServiceServer(s *grpc.Server, srv MeasurementServiceServer) {
	s.RegisterService(&_MeasurementService_serviceDesc, srv)
}

func _MeasurementService_NewMeasurement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Measurement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementServiceServer).NewMeasurement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MeasurementService/NewMeasurement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementServiceServer).NewMeasurement(ctx, req.(*Measurement))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeasurementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MeasurementService",
	HandlerType: (*MeasurementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewMeasurement",
			Handler:    _MeasurementService_NewMeasurement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "measurement.proto",
}
